// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Cycles');
gettext('Measure-8bits');
gettext('Cycle counter (up to 255 cycles)');
gettext('Contador módulo M, ascendente, de 8 bits, con reset ');
gettext('Serial transmiter for the stdout bus');
gettext('Transmisor serie');
gettext('stdout bus splitter into data and tic signals');
gettext('Convert the 1-bit next signal into a 10-bit stdout bus');
gettext('Biestable de datos (Tipo D). Cuando se recibe un tic por load se captura el dato');
gettext('Print an 8-bits unsigned integer (0 - 255)');
gettext('Transmit a 4-bits hex number (characteres 0 - 9, a - f)');
gettext('Puerta AND');
gettext('Biestable de almacenamiento del estado de la máquina');
gettext('Biestable con entradas de Set y Reset síncronas, para poner y quitar notaficaciones de eventos');
gettext('Detector de flancos de subida y bajada. Emite tic por las salidas correspondientes al detecta los flancos');
gettext('Puerta NOT');
gettext('Extract the next signal from the stdout bus');
gettext('10 bits, 2-1 Multiplexor');
gettext('stdout bus joiner (data + tic)');
gettext('Circuito combinacional de 4 entradas y 8 salidas');
gettext('Separador de bus de 8-bits en buses de 4 bits');
gettext('Separador de bus de 4-bits en 4 cables');
gettext('Agregador de 2 buses de 4-bits a bus de 8-bits');
gettext('Agregador de 4 cables en un bus de 4-bits');
gettext('Valor genérico constante, de 1 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Multiplexor de 2 a 1');
gettext('Un bit constante a 1');
gettext('Comparador menor que, de un operando de 4 bits');
gettext('Puerta OR');
gettext('Comparador de un operando de 4 bits. Se compara si el operando es igual al parámetro');
gettext('Demultiplexor de 1 bit, de 1 a 2');
gettext('Registro de 8 bits');
gettext('Máuina de conversion Binario - BCD de 8 bits');
gettext('Cálculo combinacional parcial para la conversion de Binario a BCD');
gettext('Sumador de un operando de 4 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('Multiplexor de 2 a 1 de 4 bits');
gettext('Desplazamiento combincional de 1 bit hacia la izquierda (x2)');
gettext('Registro de 4 bits con entrada de reset');
gettext('Registro de desplazamiento (izquierda) de 8 bits');
gettext('Máquina de contar, de 2 bits (cuenta hasta 4 ciclos)');
gettext('Registro de 3 bits con entrada de reset');
gettext('Comparador de dos operandos de 3 bits');
gettext('Valor genérico constante (menos 1), de 3 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Sumador de un operando de 3 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('Registro de 2 bits con reset');
gettext('Sumador de un operando de 2 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('Comparador de dos operandos de 2 bits');
gettext('Valor genérico constante (menos 1), de 2 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Multiplexor de 4 a 1 de 4 bits');
gettext('Comparador de igualdad, de un operando de 2 bits');
gettext('Valor constante 0 para bus de 4 bits');
gettext('Valor genérico constante, de 4 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Registro de 4 bits');
gettext('Transmit one constant character to the STDOUT bus');
gettext('Valor genérico constante, de 8 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Transmit one character to the STDOUT bus');
gettext('Print a constant string of 15 or less characters');
gettext('Comparador de un operando de 8 bits. Se compara si el operando es igual al parámetro');
gettext('Un bit constante a 0');
gettext('16-bytes memory, initilized with a string');
gettext('Máquina de contar, de 4 bits, con entrada de stop');
gettext('Comparador de dos operandos de 4 bits');
gettext('Valor genérico constante (menos 1), de 4 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('The exit signal is only  \nvalid qhen the counter  \nis enabled');
gettext('Counter state:  \n0: stopped  \n1: Enable (counting)');
gettext('When enabled (cnt=1) it is  \nincremented on every clock  \ncycle');
gettext('When a valid exit tic is received,  \nthe counter is disabled (it takes one cycle  \nto stop it) and its contents is printed on  \nthe console');
gettext('**Parámetro**: Módulo del contador');
gettext('## STDOUT serial\n\nSerial transmitter for the STDOUT bus\n');
gettext('**STDOUT Bus**  \n* Data to transmit (8 bits)  \n* tic (1 bit)\n* data sent (done tic, 1 bit)');
gettext('**STDOUT BUS**');
gettext('Print the current  \ndigit');
gettext('Number to print');
gettext('Transmit now! (tic)  \nActivate the machine');
gettext('Not connected');
gettext('## Print-uint8: Print a 8-bits unsigned integer (0 - 15)\n\n');
gettext('3 stages machine:  \n* stage=0: print the MS digit\n* stage=1: print the next digit\n* stage=2: print tje LS digit');
gettext('Fixed size number:  \nSelect if the number is printing  \nalways with the same number of  \ndigits or the left zeros are removed\n\n* FSize = 0: Zeros at the left are Not printed  \n* SIZE2 = 1: Print all the digits always');
gettext('Select the digit  \nto print');
gettext('Non-zero digit  \ndetected');
gettext('Any of the previous digits  \nwas non-zero');
gettext('Clear the flag  \nin the begining');
gettext('The flag is set to 1  \nwhen the count machine  \nis on and a not zero  \ndigit is detected');
gettext('Capture the number to  \nprint, in the begining');
gettext('Start the conversion');
gettext('Capture every digit  \nof the conversion');
gettext('Start the count machine for  \nprinting the digits!');
gettext('Current digit to  \nprint');
gettext('Current digit is  \nNOT 0');
gettext('Decide if the current digit is  \nprinted or not!');
gettext('Print the digit!');
gettext('Don't print the digit!');
gettext('Condition for printing  \nthe current digit');
gettext('The LS digit is  \nALWAYS printed!');
gettext('If FSize constant is  \nset, the digit are  \nprinted ALWAYS');
gettext('If FSIze constant is NOT  \nset the digit is printed  \neither if it is not zero  \nor a previous digit was not zero');
gettext('## PUTC: Transmit 4bits as an hexadecimal digit (STDOUT bus)\n');
gettext('Start tic: The byte from the  \ninput char is transmited');
gettext('Char to be transmited');
gettext('State of the machine:  \n1: ON: transmitting  \n2: OFF: transparent mode  ');
gettext('If the machine is on  \nand the character has been  \ntransmitted: Turn it off');
gettext('The machine has finished');
gettext('**Create the bus**  \nfrom the data and tic signals');
gettext('Transparent mode...  \nor not');
gettext('Write the digits (a-f) in  \nuppercase by default');
gettext('Condition: is the number  \nreceived between 10 and 15?  \n(a to f digit?)');
gettext('The digits a-f are changed to uppercase  \nby setting the 5th bit to 0 or 1');
gettext('**Tic de apagado**');
gettext('**Tic de encendido**');
gettext('**Inicializar**');
gettext('**Estado de la máquina**');
gettext('## Detector doble: flancos de subida y bajada\n\nSe detectan tanto los flancos de subida como de bajada y se emite los  \ntics por sus salidas correspondientes');
gettext('Señal de  \nentrada');
gettext('Reloj del  \nsistema');
gettext('**Reloj**');
gettext('**Número a convertir**');
gettext('**Arranque**');
gettext('Estado de la  \nmáquina');
gettext('Dígito 0');
gettext('Dígito 1');
gettext('**Máquina de contar**  \nLa conversión se realiza en  \n4 iteraciones');
gettext('Cargar el numero a convertir  \nen el arranque de la máquina');
gettext('Actualizar registro  \nen cada etapa');
gettext('**Calculos para el digito 0**');
gettext('**Calculos para el digito 1**');
gettext('Dígito 2');
gettext('Esta céluca combinacional realiza una parte del cálculo del  \nalgoritmo para convertir de **binario a BCD**:\n\nSi la entrada a es mayor o igual a 5, se devuelve a+5,  \nde lo contrario se devuelve a (se deja como estaba)');
gettext('¿Es a >= 5?');
gettext('**Si**  \na es >= que 5');
gettext('Calcular a+3');
gettext('**No**  \na NO es >= 5');
gettext('Desplazamiento combinacional  \nde un bit hacia la derecha  \n(Multiplicación x2)');
gettext('**Reloj del sistema**');
gettext('**Estado de**  \n**la máquina**');
gettext('Máquina encendida');
gettext('Máquina apagada  \n(rst = 1)');
gettext('Tic de arranque');
gettext('Tic de fin');
gettext('**Contador de ciclos**');
gettext('Número de ciclos  \ncontados');
gettext('Valor  \nincrementado');
gettext('### Salidas');
gettext('Estado de la máquina');
gettext('Ciclo actual');
gettext('Cuenta finalizada');
gettext('Ejecutar el ciclo');
gettext('Número de ciclos  \na contar');
gettext('¿Estamos en el  \nciclo k-1?');
gettext('Solo se hace caso a la  \nentrada next si la  \nmáquina está encendida');
gettext('Nuevo ciclo');
gettext('Si es el ciclo k-1 y  \nse pide un ciclo  \nnuevo: Terminar');
gettext('Apagar la  \nmáquina');
gettext('Ciclo nuevo:  \nincrementar la cuenta');
gettext('El tic de start se saca  \npor exec para que se ejecute  \nel primer ciclo');
gettext('Si la máquina está  \napagada, las señales  \nde ejecución no pueden  \nsalir!');
gettext('Retrasar la señal un ciclo  \nmientras que se detecta si  \nla máquina ha finalizado o no');
gettext('## PUTC: Transmit one constant character ');
gettext('## PUTC: Transmit one character (STDOUT bus)\n\nWhen **idle**, the STDOUT bus crosses the component without modification    \n\nWhen the machine starts, the char is outputed and the state is changed to busy  \nWhen the transmitter is done (tic received in next)  the machine is turned off');
gettext('## PRINT: Transmit one character (STDOUT bus)\n\nWhen **idle**, the STDOUT bus crosses the component without modification     \n\nWhen the machine starts, the first chars outputed and the state is changed to busy  \nWhen the transmitter is done (tic received in next)  the machine is turned off');
gettext('Start tic: The transmision of  \nthe bytes is started');
gettext('Transmit the next  \ncharacter from the string');
gettext('Tic output: Execute!');
gettext('Count machine. It is counting  \nuntil the stop signal is  \nactivated');
gettext('If the character read is 0  \nwe have reached the end of  \nthe string');
gettext('Memory with the string  \nto be transmited');
gettext('Apagado automática,  \ncuando la máquina  \ntermina');
gettext('Apagado manual');
gettext('Cycles');
gettext('01-combinational-test');
gettext('Detección de pulsación. Emite un tic cada vez que se aprieta el pulsador');
gettext('# Example 1: Measuring a combinational circuit\n\nThe combinational circuits takes 0 clock cycles to  \nexecute. Therefore, the result of this example should be:  \n```\nCycles: 0\n```');
gettext('Initial tic generated  \nmanually by pressing the buton');
gettext('We want to measure how many cycles  \nit takes for the tic to go from  \nthe point p1 to p2');
gettext('Circuit to measure:  \nThe and gate');
gettext('Meassure the cycles from P1 to P2  \nThe result is shown in the serial  \nconsole');
gettext('**Pulsador-tic**');
gettext('02-One-D-flip-flop-test');
gettext('# Example 2: Measuring a D flip-flop\n\nThe D flip-flop takes one clock cycle to output  \nthe data. Therefore this is what you should see  \non the console:\n\n```\nCycles: 1\n```');
gettext('Circuit to measure:  \nThe D-flip-flop');
gettext('03-Two-D-flip-flop-test');
gettext('# Example 3: Measuring two D flip-flop in cascade\n\nWhen two D flip-flop are connected in cascade, it  \nwill take two cycles from a pulse to go from the  \nbeging to the end. Therefore this is what you should see  \non the console:\n\n```\nCycles: 2\n```');
gettext('Circuit to measure:  \nThe two D-flip-flops');
gettext('04-Four-circuits-test');
gettext('4-1 Mux. Sel is a bus');
gettext('Contador módulo M, ascendente, de 2 bits, con reset ');
gettext('# Example 4: Measuring four different circuits\n\nUsing the Button sw2 you can select the circuit you want to meassure:0 - 3  \n* Circuit 0 is combinational: in takes 0 cycles  \n* Circuit 1 takes 1 cycle\n* Circuit 2 takes 2 cycles\n* Circuit 3 takes 3 cycles\n\nPressing the sw1 button you measure the current circuit');
gettext('Select the output  \nof the circut to measure');
gettext('## Circuit 0');
gettext('## Circuit 3');
gettext('## Circuit 2');
gettext('## Circuit 1');
gettext('Select the circuit to measure  \n(0-3)');
gettext('Show the current circuit  \nnumber (0-3) in the LEDs');
gettext('05-counter-test');
gettext('Detector de flanco de subida. Emite un tic cuando detecta un flanco ascendente');
gettext('Contador módulo M, ascendente, de 3 bits, con reset ');
gettext('# Example 5: Measuring a counter\n\nWhen the button is pressed, a counter is enabled and it counts on    \nevery clock cycle\n\nThe starting tic is taken from the rising edge of the RS-biestable  \nIt ends when the overflow signal is emitted. The time between those points  \nis equal to the counter maximum value\n\nBy default this is what you should see on the console:\n\n```\nCycles: 10\n```\n\n');
gettext('Counter state:  \n* 0: Off: not counting\n* 1: On. Counting');
gettext('counter');
gettext('06-count-machine-test');
gettext('# Example 6: Measuring a count machine\n\nThe cycles counter works very well with the machines, that are  \nsequential circuits with a start and done signals\n\nIn this example a counter machine is done. It starts,  counts  \ntwo cycles and finished. In total it will take it 3 clock cycles:\n\n```\nCycles: 3\n```\n\n');
gettext('No delay between counting');
